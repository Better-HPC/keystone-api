name: Test

on:
  push:

jobs:
  app-tests:
    name: App Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pip install .

      - name: Run tests
        run: crc-service-api test

  container-status:
    name: Container Status
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          tags: test-img:latest
          load: true

      - name: Launch container
        run: docker run -d -p 8000:8000 test-img

      - name: Check API health
        run: |
          endpoint="http://localhost:8000/health"
          httpstatus=$(curl --silent --output /dev/null --write-out "%{http_code}" $endpoint)
          if [ "$httpstatus" -ne 200 ]; then
            curl $endpoint
            exit 1
          fi

  report-test-status:
    name: Report Test Status
    if: always()
    needs: [ app-tests, container-status ]
    runs-on: ubuntu-latest
    steps:
      - name: Check build status
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
